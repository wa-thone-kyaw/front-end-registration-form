{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5X505DY (R5)\\\\Downloads\\\\front-end-registration-form-2d3d3bc2c86886471e1456bbff4f1a08f461ebb6\\\\front-end-registration-form\\\\src\\\\component\\\\Dashboard\\\\SecondyearStudent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./SecondyearStudent.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport EditableRow from \"./EditableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SecondyearStudent = () => {\n  _s();\n  // State to hold the data for the table\n  const [data, setData] = useState([]);\n\n  // Function to add data to the table\n  const addData = newData => {\n    setData([...data, newData]);\n  };\n\n  // Table header row\n  const tableHeaders = [\"Name\", \"Age\", \"Email\"];\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: tableHeaders.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n// export const SecondyearStudent = () => {\n//   const [contacts, setContacts] = useState(data);\n//   const [addFormData, setAddFormData] = useState({\n//     fullName: \"\",\n//     rollno: \"\",\n//     phoneNumber: \"\",\n//   });\n\n//   const [editFormData, setEditFormData] = useState({\n//     fullName: \"\",\n//     rollno: \"\",\n//     phoneNumber: \"\",\n//   });\n\n//   const [editContactId, setEditContactId] = useState(null);\n\n//   const handleAddFormChange = (event) => {\n//     event.preventDefault();\n\n//     const fieldName = event.target.getAttribute(\"name\");\n//     const fieldValue = event.target.value;\n\n//     const newFormData = { ...addFormData };\n//     newFormData[fieldName] = fieldValue;\n\n//     setAddFormData(newFormData);\n//   };\n\n//   const handleEditFormChange = (event) => {\n//     event.preventDefault();\n\n//     const fieldName = event.target.getAttribute(\"name\");\n//     const fieldValue = event.target.value;\n\n//     const newFormData = { ...editFormData };\n//     newFormData[fieldName] = fieldValue;\n\n//     setEditFormData(newFormData);\n//   };\n\n//   const handleAddFormSubmit = (event) => {\n//     event.preventDefault();\n\n//     const newContact = {\n//       id: nanoid(),\n//       fullName: addFormData.fullName,\n//       rollno: addFormData.rollno,\n//       phoneNumber: addFormData.phoneNumber,\n//     };\n\n//     const newContacts = [...contacts, newContact];\n//     setContacts(newContacts);\n//   };\n\n//   const handleEditFormSubmit = (event) => {\n//     event.preventDefault();\n\n//     const editedContact = {\n//       id: editContactId,\n//       fullName: editFormData.fullName,\n//       rollno: editFormData.rollno,\n//       phoneNumber: editFormData.phoneNumber,\n//     };\n\n//     const newContacts = [...contacts];\n\n//     const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n//     newContacts[index] = editedContact;\n\n//     setContacts(newContacts);\n//     setEditContactId(null);\n//   };\n\n//   const handleEditClick = (event, contact) => {\n//     event.preventDefault();\n//     setEditContactId(contact.id);\n\n//     const formValues = {\n//       fullName: contact.fullName,\n//       rollno: contact.rollno,\n//       phoneNumber: contact.phoneNumber,\n//     };\n\n//     setEditFormData(formValues);\n//   };\n\n//   const handleCancelClick = () => {\n//     setEditContactId(null);\n//   };\n\n//   const handleDeleteClick = (contactId) => {\n//     const newContacts = [...contacts];\n\n//     const index = contacts.findIndex((contact) => contact.id === contactId);\n\n//     newContacts.splice(index, 1);\n\n//     setContacts(newContacts);\n//   };\n\n//   return (\n\n//     <div className=\"table\">\n//        <div class=\"col-sm-3 mt-5 mb-4 text-gred\">\n//     <div className=\"search\">\n\n//        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search Student\" aria-label=\"Search\"/>\n//       </div>\n//     </div>\n\n//       <form onSubmit={handleEditFormSubmit}>\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Name</th>\n//               <th>Roll-no</th>\n//               <th>Phone-no</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {contacts.map((contact) => (\n//               <Fragment>\n//                 {editContactId === contact.id ? (\n//                   <EditableRow\n//                     editFormData={editFormData}\n//                     handleEditFormChange={handleEditFormChange}\n//                     handleCancelClick={handleCancelClick}\n//                   />\n//                 ) : (\n//                   <ReadOnlyRow\n//                     contact={contact}\n//                     handleEditClick={handleEditClick}\n//                     handleDeleteClick={handleDeleteClick}\n//                   />\n//                 )}\n//               </Fragment>\n//             ))}\n//           </tbody>\n//         </table>\n//       </form>\n\n//       <h2>Add a Contact</h2>\n//       <form onSubmit={handleAddFormSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"fullName\"\n//           required=\"required\"\n//           placeholder=\"Enter a name...\"\n//           onChange={handleAddFormChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"Roll-no\"\n//           required=\"required\"\n//           placeholder=\"Enter roll no...\"\n//           onChange={handleAddFormChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"phoneNumber\"\n//           required=\"required\"\n//           placeholder=\"Enter a phone number...\"\n//           onChange={handleAddFormChange}\n//         />\n\n//         <button type=\"submit\">Add</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default SecondyearStudent;\n_s(SecondyearStudent, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = SecondyearStudent;\nvar _c;\n$RefreshReg$(_c, \"SecondyearStudent\");","map":{"version":3,"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","EditableRow","jsxDEV","_jsxDEV","SecondyearStudent","_s","setData","addData","newData","tableHeaders","children","map","header","index","fileName","_jsxFileName","lineNumber","columnNumber","row","name","age","email","_c","$RefreshReg$"],"sources":["C:/Users/5X505DY (R5)/Downloads/front-end-registration-form-2d3d3bc2c86886471e1456bbff4f1a08f461ebb6/front-end-registration-form/src/component/Dashboard/SecondyearStudent.jsx"],"sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport \"./SecondyearStudent.css\";\r\nimport data from \"./mock-data.json\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\";\r\n\r\nexport const SecondyearStudent = () => {\r\n  // State to hold the data for the table\r\n  const [data, setData] = useState([]);\r\n\r\n  // Function to add data to the table\r\n  const addData = (newData) => {\r\n    setData([...data, newData]);\r\n  };\r\n\r\n  // Table header row\r\n  const tableHeaders = [\"Name\", \"Age\", \"Email\"];\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          {tableHeaders.map((header, index) => (\r\n            <th key={index}>{header}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {/* Render data rows */}\r\n        {data.map((row, index) => (\r\n          <tr key={index}>\r\n            <td>{row.name}</td>\r\n            <td>{row.age}</td>\r\n            <td>{row.email}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\n// export const SecondyearStudent = () => {\r\n//   const [contacts, setContacts] = useState(data);\r\n//   const [addFormData, setAddFormData] = useState({\r\n//     fullName: \"\",\r\n//     rollno: \"\",\r\n//     phoneNumber: \"\",\r\n//   });\r\n\r\n//   const [editFormData, setEditFormData] = useState({\r\n//     fullName: \"\",\r\n//     rollno: \"\",\r\n//     phoneNumber: \"\",\r\n//   });\r\n\r\n//   const [editContactId, setEditContactId] = useState(null);\r\n\r\n//   const handleAddFormChange = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const fieldName = event.target.getAttribute(\"name\");\r\n//     const fieldValue = event.target.value;\r\n\r\n//     const newFormData = { ...addFormData };\r\n//     newFormData[fieldName] = fieldValue;\r\n\r\n//     setAddFormData(newFormData);\r\n//   };\r\n\r\n//   const handleEditFormChange = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const fieldName = event.target.getAttribute(\"name\");\r\n//     const fieldValue = event.target.value;\r\n\r\n//     const newFormData = { ...editFormData };\r\n//     newFormData[fieldName] = fieldValue;\r\n\r\n//     setEditFormData(newFormData);\r\n//   };\r\n\r\n//   const handleAddFormSubmit = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const newContact = {\r\n//       id: nanoid(),\r\n//       fullName: addFormData.fullName,\r\n//       rollno: addFormData.rollno,\r\n//       phoneNumber: addFormData.phoneNumber,\r\n//     };\r\n\r\n//     const newContacts = [...contacts, newContact];\r\n//     setContacts(newContacts);\r\n//   };\r\n\r\n//   const handleEditFormSubmit = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const editedContact = {\r\n//       id: editContactId,\r\n//       fullName: editFormData.fullName,\r\n//       rollno: editFormData.rollno,\r\n//       phoneNumber: editFormData.phoneNumber,\r\n//     };\r\n\r\n//     const newContacts = [...contacts];\r\n\r\n//     const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n//     newContacts[index] = editedContact;\r\n\r\n//     setContacts(newContacts);\r\n//     setEditContactId(null);\r\n//   };\r\n\r\n//   const handleEditClick = (event, contact) => {\r\n//     event.preventDefault();\r\n//     setEditContactId(contact.id);\r\n\r\n//     const formValues = {\r\n//       fullName: contact.fullName,\r\n//       rollno: contact.rollno,\r\n//       phoneNumber: contact.phoneNumber,\r\n//     };\r\n\r\n//     setEditFormData(formValues);\r\n//   };\r\n\r\n//   const handleCancelClick = () => {\r\n//     setEditContactId(null);\r\n//   };\r\n\r\n//   const handleDeleteClick = (contactId) => {\r\n//     const newContacts = [...contacts];\r\n\r\n//     const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n//     newContacts.splice(index, 1);\r\n\r\n//     setContacts(newContacts);\r\n//   };\r\n\r\n//   return (\r\n\r\n//     <div className=\"table\">\r\n//        <div class=\"col-sm-3 mt-5 mb-4 text-gred\">\r\n//     <div className=\"search\">\r\n\r\n//        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search Student\" aria-label=\"Search\"/>\r\n//       </div>\r\n//     </div>\r\n\r\n//       <form onSubmit={handleEditFormSubmit}>\r\n//         <table>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Name</th>\r\n//               <th>Roll-no</th>\r\n//               <th>Phone-no</th>\r\n//               <th>Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {contacts.map((contact) => (\r\n//               <Fragment>\r\n//                 {editContactId === contact.id ? (\r\n//                   <EditableRow\r\n//                     editFormData={editFormData}\r\n//                     handleEditFormChange={handleEditFormChange}\r\n//                     handleCancelClick={handleCancelClick}\r\n//                   />\r\n//                 ) : (\r\n//                   <ReadOnlyRow\r\n//                     contact={contact}\r\n//                     handleEditClick={handleEditClick}\r\n//                     handleDeleteClick={handleDeleteClick}\r\n//                   />\r\n//                 )}\r\n//               </Fragment>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </form>\r\n\r\n//       <h2>Add a Contact</h2>\r\n//       <form onSubmit={handleAddFormSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"fullName\"\r\n//           required=\"required\"\r\n//           placeholder=\"Enter a name...\"\r\n//           onChange={handleAddFormChange}\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"Roll-no\"\r\n//           required=\"required\"\r\n//           placeholder=\"Enter roll no...\"\r\n//           onChange={handleAddFormChange}\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"phoneNumber\"\r\n//           required=\"required\"\r\n//           placeholder=\"Enter a phone number...\"\r\n//           onChange={handleAddFormChange}\r\n//         />\r\n\r\n//         <button type=\"submit\">Add</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SecondyearStudent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,yBAAyB;AAChC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC;EACA,MAAM,CAACN,IAAI,EAAEO,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMW,OAAO,GAAIC,OAAO,IAAK;IAC3BF,OAAO,CAAC,CAAC,GAAGP,IAAI,EAAES,OAAO,CAAC,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC;EAE7C,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,EACGD,YAAY,CAACE,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9BV,OAAA;UAAAO,QAAA,EAAiBE;QAAM,GAAdC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRd,OAAA;MAAAO,QAAA,EAEGX,IAAI,CAACY,GAAG,CAAC,CAACO,GAAG,EAAEL,KAAK,kBACnBV,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,EAAKQ,GAAG,CAACC;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBd,OAAA;UAAAO,QAAA,EAAKQ,GAAG,CAACE;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClBd,OAAA;UAAAO,QAAA,EAAKQ,GAAG,CAACG;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHbJ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAAZ,EAAA,CAhNaD,iBAAiB;AAAAkB,EAAA,GAAjBlB,iBAAiB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}